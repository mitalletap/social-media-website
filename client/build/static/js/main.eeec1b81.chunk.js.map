{"version":3,"sources":["aws-exports.js","components/layout/NavBar.js","components/pages/home/FeedItem.js","helpers/helper.js","components/pages/profile/PublicProfile.js","components/pages/home/Feed.js","components/pages/home/Home.js","components/pages/friends/FriendCard.js","components/pages/friends/Friends.js","components/pages/profile/Profile.js","components/pages/notifications/Notifications.js","components/pages/post/Post.js","App.js","serviceWorker.js","history.js","index.js"],"names":["awsmobile","NavBar","Input","Search","props","handleSignout","Auth","signOut","state","this","searchValue","Fragment","className","to","size","icon","UserOutlined","selectedKeys","current","mode","Item","key","HomeOutlined","style","color","TeamOutlined","BellOutlined","FormOutlined","onClick","bottom","ThunderboltOutlined","Component","FeedItem","feed","time","moment","created","format","username","message","HelperFunction","getEnvironmentStatus","PublicProfile","queryDatabaseForUser","envState","searchFinished","API","match","params","fetch","method","headers","then","res","json","result","setState","userData","pageLoaded","catch","err","userExists","console","log","checkFollowStatus","searchedUsername","following","currentAuthenticatedUser","attributes","preferred_username","envVar","HelperFunctions","name","createdAt","followers","length","posts","reverse","map","post","i","Feed","process","getAllPosts","item","Home","searchForUser","searchedUser","a","modalTime","email","object","sendPOSTRequest","user","body","JSON","stringify","paddingTop","marginLeft","placeholder","width","onSelect","value","target","path","Paragraph","Typography","Friends","Profile","Notifications","TextArea","Post","handlePost","e","handlePostCharacters","charactersUsed","typing","userSignedIn","response","allowClear","maxLength","rows","onChange","percent","showInfo","strokeColor","from","maxWidth","disabled","require","config","Amplify","configure","aws_exports","Layout","Header","Content","Sider","Footer","App","phoneNumber","birthday","loaded","birthdate","phone_number","data","push","breakpoint","collapsedWidth","theme","exact","component","withAuthenticator","signUpConfig","hiddenDefaults","defaultCountryCode","signUpFields","label","required","displayOrder","type","Boolean","window","location","hostname","createBrowserHistory","ReactDOM","render","history","document","getElementById"],"mappings":"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","file":"static/js/main.eeec1b81.chunk.js","sourcesContent":["// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cognito_identity_pool_id\": \"us-east-2:8065b198-b0b3-4579-b53d-488831527ec3\",\n    \"aws_cognito_region\": \"us-east-2\",\n    \"aws_user_pools_id\": \"us-east-2_8hppppLjZ\",\n    \"aws_user_pools_web_client_id\": \"67evlb9p6aak7ehb4fbdkdgs8j\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import 'antd/dist/antd.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Avatar, Modal, AutoComplete, Input } from 'antd';\nimport { Auth } from 'aws-amplify';\nimport { UserOutlined, BellOutlined, TeamOutlined, HomeOutlined, FormOutlined, ThunderboltOutlined, SearchOutlined } from '@ant-design/icons';\n\nconst { Search } = Input;\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n        // this.getAllUsers();\n    }\n    \n    handleSignout = () => {\n        Auth.signOut()\n    };\n\n    render() { \n        const { searchValue } = this.state;\n        return ( \n        <React.Fragment> \n            <div className=\"navbar-contaner\">\n                <div className=\"navbar-profile-banner\">\n                    <Link to=\"/profile\"> <Avatar size={60} icon={<UserOutlined />} /> </Link>\n                </div>\n                <Menu className=\"navbar-menu-items\" selectedKeys={[this.state.current]} mode={\"vertical\"}>\n                    <Menu.Item key=\"post\" className=\"navbar-title\"> <Link to=\"/\"> <HomeOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> HOME </span> </Link> </Menu.Item>\n                    <Menu.Item key=\"friends\"> <Link to=\"/friends\"> <TeamOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> FRIENDS </span> </Link> </Menu.Item>\n                    <Menu.Item key=\"notifications\"> <Link to=\"/notifications\"> <BellOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> NOTIFICATIONS </span> </Link> </Menu.Item>\n                    <Menu.Item key=\"create-post\"> <Link to=\"/create-post\"> <FormOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> POST </span> </Link> </Menu.Item>\n                    <Menu.Item key=\"sign-out\" onClick={this.handleSignout} style={{ bottom: \"-45vh\" }}> <Link to=\"/\"> <ThunderboltOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> SIGN OUT </span> </Link> </Menu.Item>\n                </Menu>\n            </div>\n          </React.Fragment>\n         );\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass FeedItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            feed: []\n        }\n    }\n\n    \n    render() { \n        var time = moment(this.props.created).format('LLL')  //'MMMM Do YYYY, h:mm:ss'\n        return ( \n            <React.Fragment>\n                <div className=\"feed-elements\">\n                    <h1> {this.props.username} </h1>\n                    <h1> {this.props.message} </h1>\n                    <h1> {time} </h1>\n                </div>\n            </React.Fragment>\n         );\n    }\n}\n \nexport default FeedItem;","import React, { Component } from 'react';\n\nconst HelperFunction = {\n\n    getEnvironmentStatus: function() {\n        const eVar = process.env.NODE_ENV === 'production' ? 'twitter.mitalletap.io:8080' : 'localhost:8080';\n        return eVar;\n    } \n\n}\n\nexport default HelperFunction;","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport moment from 'moment'\nimport FeedItem from '../home/FeedItem';\nimport { useParams } from 'react-router-dom';\nimport { Auth } from 'aws-amplify'; \nimport HelperFunctions from '../../../helpers/helper';\n\nclass PublicProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            searchedUsername: \"\",\n            following: '',\n            userData: [],\n            pageLoaded: false,\n            envState: ''\n        }\n    }\n\n\n    componentDidMount() {\n        Auth.currentAuthenticatedUser()\n        .then((res) => { \n            this.setState({  username: res.attributes.preferred_username });\n        })\n        .catch(err => console.log(err))\n\n        var envVar = HelperFunctions.getEnvironmentStatus();\n        this.setState({ envState: envVar }, () => {\n            this.setState({ searchedUsername: this.props.match.params.username });\n            this.queryDatabaseForUser(this.props.match.params.username);\n        });\n    }\n\n    queryDatabaseForUser = username => {\n        const { searchValue, searchFinished, envState } = this.state;\n        const API= `http://${envState}/user/${this.props.match.params.username}`;\n        fetch(API, { method: 'GET', headers: { 'content-type': 'application/json' }})\n        .then(res => res.json())\n        .then((result) => { this.setState({ userData: result[0], pageLoaded: true })})\n        .catch((err) => { this.setState({ userExists: false}); console.log(err) } );\n    }\n\n    checkFollowStatus = (username, searchedUsername) => {\n        const { envState } = this.state;\n        const API = `http://${envState}/user/check-following-status/${username}/${searchedUsername}`;\n        console.log(API)\n        fetch(API, { method: 'GET' })\n        .then((res) => res.json())\n        .then(result => { this.setState({ following: result }) })\n        .catch((err) => { console.log(err) } );\n    }\n\n\n    render() {\n        const { username, searchedUsername, userData, pageLoaded } = this.state;\n        if(pageLoaded === true) {\n            return (\n                <React.Fragment>\n                <div className=\"public-profile-container\">\n                    <h1> {`This is the public profile for ${searchedUsername}`} </h1>\n                    <Button onClick={() => console.log(this.state)}> Click Me</Button>\n                    <div className=\"public-profile-header center\"></div>\n                    <div className=\"public-profile-information center\">\n                        <h1> BIO </h1>\n                        <div>\n                            <div className=\"public-profile-information-item\"> \n                                <p> {userData.name} </p>\n                            </div>\n                            <div className=\"public-profile-information-item\"> \n                                <p> @{userData.username} </p>\n                            </div>\n                            <div className=\"public-profile-information-item\"> \n                                <p> Joined {moment(userData.createdAt).format('ll')} </p>\n                            </div>\n                            <div className=\"public-profile-information-item\"> \n                                <p> {userData.followers.length} followers </p>\n                            </div>\n                            <div className=\"public-profile-information-item\"> \n                                <p> {userData.following.length} following </p>\n                            </div>\n                            <div className=\"public-profile-information-item\"> \n                                <p> {userData.posts.length} posts </p>\n                            </div>\n                            <div className=\"public-profile-information-item\"> \n                                <Button onClick={() => this.checkFollowStatus(username, searchedUsername)}> Follow </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"public-profile-posts center\"> \n                        {userData.posts.reverse().map(function(post, i) {\n                            return (\n                                <React.Fragment key={i}>\n                                    <div className=\"profile-post-item\" > \n                                        <FeedItem username={post.username} message={post.message} created={post.createdAt}/>\n                                    </div>\n                                    <br/>\n                                </React.Fragment>\n                            )\n                        })}\n                    </div>\n                </div>\n            </React.Fragment>\n            )\n        } else {\n            return (\n                <h1> Loading... </h1>\n            )\n        }\n    }\n    \n\n    \n}\n \nexport default PublicProfile;\n","import React, { Component } from 'react';\nimport FeedItem from './FeedItem';\nimport HelperFunctions from '../../../helpers/helper';\n\nclass Feed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            feed: [],\n            envState: ''\n        }\n    }\n\n\n    componentDidMount() {\n        console.log(process.env.REACT_APP_TEST)\n        this.getAllPosts();\n    }\n\n    getAllPosts() {\n        const { envState } = this.state;\n        var envVar = HelperFunctions.getEnvironmentStatus();\n        this.setState({ envState: envVar });\n        const API=`http://${envVar}`;\n        fetch(API)\n        .then(res => res.json())\n        .then((result) => this.setState({ feed: result.reverse() }))\n        .catch(err => console.log(err));\n    }\n\n    render() { \n        const { feed } = this.state;\n        if(feed.length > 0) {\n            return ( \n                <div className=\"feed-container\">\n                    {feed.map(function(item, i) {\n                        return (\n                            <React.Fragment key={`key-${i}`}>\n                                <div className=\"feed-item\" > \n                                    <FeedItem username={item.username} message={item.message} created={item.createdAt}/>\n                                </div>\n                                <br/>\n                            </React.Fragment>\n                        )\n                    })}\n                </div>\n         );\n        } else {\n            return (\n                <h1> There are no active posts </h1>\n            )\n        }\n    }\n}\n \nexport default Feed;","import React, { Component } from 'react';\nimport { Input, Button, Modal } from 'antd';\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Auth } from 'aws-amplify';\nimport PublicProfile from '../profile/PublicProfile';\nimport Feed from './Feed';\nimport HelperFunctions from '../../../helpers/helper';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchValue: \"\",\n            searchFinished: false,\n            userExists: false,\n            modalTime: 5,\n            searchedUser: '',\n            envState: ''\n        }\n    }\n\n    componentDidMount() {\n        Auth.currentAuthenticatedUser()\n        .then((res) => { \n        this.setState({ \n                username: res.username,\n                email: res.attributes.email,\n            });\n        })\n        const object = {\n            name: this.props.name,\n            username: this.props.username\n        }\n        this.sendPOSTRequest(object);\n    }\n\n    sendPOSTRequest(user) {\n        const { envState } = this.state;\n        var envVar = HelperFunctions.getEnvironmentStatus();\n        this.setState({ envState: envVar });\n        const API = `http://${envVar}/user/`;\n        fetch(API, {\n            method: 'POST',\n            body: JSON.stringify(user),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n    }\n\n    searchForUser = username => {\n        console.log(`Searching for user ${username}`)\n        const { searchValue, searchFinished, searchedUser } = this.state;\n        this.setState({ userExists: false })\n        this.queryDatabaseForUser(username);\n        console.log(\"Done\")\n    }\n\n    queryDatabaseForUser = async username => {\n        const { searchValue, envState } = this.state;\n        const API= `http://${envState}/user/${username}`;\n        fetch(API, { method: 'GET' })\n        .then(res => res.json())\n        .then((result) => { console.log(result); this.setState({ searchFinished: true, userExists: result.length > 0 !== true ? false : true, searchedUser: searchValue})})\n        .catch((err) => { this.setState({ userExists: false}); console.log(err) } );\n    }\n    \n    render() {\n        const { searchValue, userExists, searchFinished, searchedUser } = this.state;\n        return (\n            <React.Fragment>\n                    <div className=\"home-container\" style={{ paddingTop: \"50px\" }}>\n                        <Link to={`/u/${searchedUser}`} style={{ marginLeft: \"20px\"}}> \n                            <h1 className={userExists === true ? 'home-user-found' : 'home-user-not-found'}>{userExists === true ? `Visit ${searchedUser}'s Profile` : ''}</h1> \n                        </Link>\n                        <div className=\"home-search-bar\">\n                            <Input placeholder=\"Search for user\" style={{ width: \"250px\"}}  onSelect={(value) => this.setState({ searchValue: value.target.value, searchFinished: false })}/>\n                            <Button onClick={() => { this.searchForUser(searchValue) }}>Search</Button>\n                        </div>\n                        <div className=\"home-feed\">\n                            <Feed />\n                        </div>\n                    </div>\n                    <Route path=\"/u/:username\"> <PublicProfile username={searchValue}/> </Route>  \n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Avatar, Button, Typography } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Paragraph } = Typography;\n\nclass FriendCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            longDescription: false\n        }\n    }\n\n    componentDidMount() {\n        this.props.description.length >= 30 ? this.setState({ longDescription: true }) : this.setState({ longDescription: false })\n    }\n\n    render() { \n        return (  \n            <React.Fragment>\n                <div className=\"friend-card-container\">\n                    <div className=\"friend-card-avatar\"> \n                        <Avatar size={64} icon={<UserOutlined />} />\n                        <h1> {this.props.name} </h1>\n                    </div>\n                    <div className=\"friend-card-data\">\n                        <p> {this.props.username} </p>\n                        <Paragraph ellipsis={{ rows: 4, expandable: this.state.longDescription }}>\n                            <p> {this.props.description} </p>\n                        </Paragraph>\n                    </div>\n                    <div className=\"friend-card-follow\">\n                        <Button> Following </Button>\n                    </div>\n                </div>\n                <br />\n            </React.Fragment>\n        );\n    }\n}\n \nexport default FriendCard;","import React, { Component } from 'react';\nimport FriendCard from './FriendCard'\n\nclass Friends extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            userData: [],\n            pageLoaded: false,\n        }\n    }\n\n\n    componentDidMount() {\n        const { username } = this.state;\n        this.setState({ username: this.props.username });\n        this.queryDatabaseForUser(this.props.username);\n        this.setState({ pageLoaded: true })\n    }\n\n\n    queryDatabaseForUser = async username => {\n        const API= `http://localhost:5000/user/${username}`;\n        console.log(API)\n        fetch(API, { method: 'GET' })\n        .then(res => res.json())\n        .then((result) => { this.setState({ userData: result[0] }, \n            () => { console.log(result) } )})\n        .catch((err) => { console.log(err) } );\n    }\n\n    render() {\n        const { userData, pageLoaded } = this.state;\n        console.log(userData)\n        if(pageLoaded === true) {\n            return (\n                <React.Fragment>\n                    <div className=\"friends-container\" style={{ paddingTop: \"50px\"}}>\n                        {/* {userData.followers.map(function(follower, i) {\n                            return (\n                                <React.Fragment key={i}>\n                                    <div className=\"profile-post-item\" > \n                                        <h1> Hello </h1>\n                                    </div>\n                                </React.Fragment>\n                            )\n                        })} */}\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <h1> Loading.. </h1>\n            )\n        }\n    }\n}\n\nexport default Friends;\n\n\n\n{/* <FriendCard name={\"mital\"} username={\"@mitalletap\"} description={\"user bio\"}/>\n<FriendCard name={\"chirag\"} username={\"@chiggy\"} description={\"asdasd\"}/>\n<FriendCard name={\"ann\"} username={\"@annnnnn\"} description={\"user \"}/> */}","import React, { Component } from 'react';\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n    render() { \n        return ( \n            <React.Fragment>\n                <div className=\"private-profile-container\" style={{ paddingTop: \"50px\"}}>\n                    <h1> {`${this.props.username}'s Profile`} </h1>\n                </div>\n            </React.Fragment>\n         );\n    }\n}\n \nexport default Profile;","import React, { Component } from 'react';\n\nclass Notifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"notifications-container\" style={{ paddingTop: \"50px\"}}>\n                    <h1> This is the Notification page </h1>\n                    <h1> This is the Notification page </h1>\n                    <h1> This is the Notification page </h1>\n                    <h1> This is the Notification page </h1>\n                    <h1> This is the Notification page </h1>\n                    <h1> This is the Notification page </h1>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Notifications;","import React, { Component } from 'react';\nimport { Input, Button, Progress } from 'antd';\nimport { Auth } from 'aws-amplify';\nimport HelperFunctions from '../../../helpers/helper';\n\n\nconst { TextArea } = Input;\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            charactersUsed: 0,\n            message: \"\",\n            email: this.props.email,\n            username: this.props.username,\n            envState: ''\n        }\n    }\n\n\n    componentDidMount() {\n        var envVar = HelperFunctions.getEnvironmentStatus();\n        this.setState({ envState: envVar });\n        Auth.currentAuthenticatedUser()\n        .then((res) => this.setState({ \n            userSignedIn: true,\n            username: res.username,\n            email: res.attributes.email,\n        }))\n        .catch(err => console.log(err))\n    }\n\n    handlePost = (e) => {\n        const { message, username } = this.state;\n        console.log(message, username)\n        const object = {\n            username,\n            message,\n        }\n        console.log(object);\n        this.sendPOSTRequest(object);\n    }\n\n    handlePostCharacters = (e) => {\n        const { message } = this.state;\n        if(e.target.value.length === 0) {\n            this.setState({ message: \"\", charactersUsed: 0})\n        } else {\n            this.setState({ message: e.target.value, charactersUsed: 0 + e.target.value.length, typing: true })\n        }\n    }\n\n    sendPOSTRequest(message) {\n        const { envState } = this.state;\n        const API = `http://${envState}/post`;\n        fetch(API, {\n            method: 'POST',\n            body: JSON.stringify(message),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .catch(err => console.log(err));\n    }\n    \n\n    render() {\n        const { charactersUsed, message, username } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"post-container\" style={{ paddingTop: \"50px\"}}>\n                    <div className=\"post-input-area\">\n                        <TextArea allowClear maxLength={250} rows={4} style={{ width: \"50vw\" }}  onChange={this.handlePostCharacters}></TextArea>  \n                        <Progress percent={this.state.charactersUsed * .4} size=\"small\" showInfo={false} strokeColor={{ from: '#63cdda', to: '#0984e3'}} style={{ maxWidth: \"50vw\"}}/>\n                    </div>\n                    <div className=\"post-button\">\n                        <Button className=\"primary-button\" disabled={this.state.charactersUsed === 0} onClick={() => this.handlePost(this.state.message)}> {this.state.charactersUsed === 0 ? `WHATS ON YOUR MIND?` : `POST WITH ${charactersUsed} CHARACTERS`} </Button>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Post;\n\n//'#1B9CFC', to: '#182C61'","import React, { Component } from 'react';\nimport Amplify, { Auth } from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport aws_exports from './aws-exports';\n\nimport NavBar from './components/layout/NavBar';\nimport Home from './components/pages/home/Home';\nimport Friends from './components/pages/friends/Friends';\nimport Profile from './components/pages/profile/Profile';\nimport Notifications from './components/pages/notifications/Notifications';\nimport Post from './components/pages/post/Post';\nimport PublicProfile from './components/pages/profile/PublicProfile';\n\n\nimport { BrowserRouter as Router, Switch, Route, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Input, Button } from 'antd';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport '@aws-amplify/ui/dist/style.css';\n\nrequire('dotenv').config()\nAmplify.configure(aws_exports);\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nconst signUpConfig = {\n  hiddenDefaults: [\"username\"],\n  defaultCountryCode: '1',\n  signUpFields: [{\n    label: 'Name',\n    key: 'name',\n    required: true,\n    displayOrder: 1,\n    type: 'string',\n  },\n  {\n    label: 'Username',\n    key: 'preferred_username',\n    required: true,\n    displayOrder: 2,\n    type: 'string',\n  },\n  {\n    label: 'Date of Birth',\n    key: 'birthdate',\n    required: true,\n    displayOrder: 3,\n    type: 'date',\n  }]\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      userSignedIn: false,\n      username: \"\",\n      name: '',\n      email: '',\n      phoneNumber: '',\n      birthday: '',\n      loaded: false\n    }\n  }\n\n  componentDidMount() {\n    Auth.currentAuthenticatedUser()\n      .then((res) => { \n        this.setState({ \n          userSignedIn: true,\n          username: res.username,\n          name: res.attributes.name,\n          email: res.attributes.email,\n          birthday: res.attributes.birthdate,\n          phoneNumber: res.attributes.phone_number\n        }, res.username !== '' ? this.setState({ loaded: true }) : this.setState({ loaded: false }));\n      })\n      .catch(err => console.log(err))\n  }\n\n\n\n  getUserData() {\n    const { userData } = this.state;\n    var data = [];\n    data.push(userData.username);\n    data.push(userData.attributes.name);\n    return data;\n  }\n\n  render() {\n    const { name, username, loaded } = this.state;\n    return (\n      loaded === true ? \n      <React.Fragment>\n        <div className=\"app-container\">\n          <Router>\n            <Layout>\n              <Sider breakpoint=\"lg\" collapsedWidth=\"100\" className=\"sider-navbar\" theme={\"light\"} width={500}>\n                  <NavBar />\n              </Sider>\n              <Layout className=\"a\n              pp-content\">\n                <Layout>\n                  <Content>\n                    <Switch className=\"app-content-items\">\n                      <Route exact path=\"/\"><Home username={username} name={name}/></Route>\n                      <Route exact path=\"/friends\"><Friends username={username} /></Route>\n                      <Route exact path=\"/profile\"><Profile username={username}/></Route>\n                      <Route exact path=\"/notifications\"><Notifications /></Route>\n                      <Route exact path=\"/create-post\"><Post name={name} username={username}/></Route>\n                      {/* <Route path=\"/u/:username\"> <PublicProfile username={username}/> </Route>   */}\n                      <Route path=\"/u/:username\" component={PublicProfile} />   \n                    </Switch>\n                  </Content>\n                </Layout>\n              </Layout>\n            </Layout>\n          </Router>\n        </div>\n      </React.Fragment>\n      :\n      <h1> Loading </h1>\n\n    )\n  }\n}\n\n\nexport default withAuthenticator(App, { signUpConfig });\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport history from './history';\n\nReactDOM.render( <Router history={history}> <App /> </Router> ,document.getElementById('root'));\n"],"sourceRoot":""}